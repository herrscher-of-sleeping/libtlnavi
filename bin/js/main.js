// Generated by Haxe 4.3.6
(function ($global) { "use strict";
var Graph = function(vertices) {
	if(vertices == null) {
		vertices = 0;
	}
	this.weights = [];
	this.edges = [];
	var _g = 0;
	var _g1 = vertices;
	while(_g < _g1) {
		var i = _g++;
		this.edges.push([]);
		this.weights.push([]);
	}
};
Graph.fromGeodata = function(geodata) {
};
Graph.prototype = {
	addEdge: function(i,j,weight) {
		this.edges[i].push(j);
		this.weights[i].push(weight);
		this.edges[j].push(i);
		this.weights[j].push(weight);
		console.log("src/Graph.hx:23:","Add edge for " + i + ", " + j + ", weight " + weight);
	}
	,clone: function() {
		var g = new Graph();
		var _this = this.edges;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].slice();
		}
		g.edges = result;
		var _this = this.weights;
		var result = new Array(_this.length);
		var _g = 0;
		var _g1 = _this.length;
		while(_g < _g1) {
			var i = _g++;
			result[i] = _this[i].slice();
		}
		g.weights = result;
		return g;
	}
};
var Main = function() { };
Main.main = function() {
	var g = new Graph(100);
	console.log("src/Main.hx:4:","Hwllo");
	g.addEdge(1,2,123);
	var g2 = g.clone();
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
Main.main();
})({});
